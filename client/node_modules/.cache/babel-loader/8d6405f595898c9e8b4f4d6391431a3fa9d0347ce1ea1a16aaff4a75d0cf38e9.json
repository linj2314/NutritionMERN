{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\linj2\\\\Documents\\\\MERN\\\\client\\\\src\\\\components\\\\FoodSearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InputFood() {\n  _s();\n  const navigate = useNavigate();\n  const [foodSearchList, updateList] = useState([]);\n  const arr = [\"a\", \"b\"];\n  const [query, updateQuery] = useState(\"\");\n  const [selected, setSelected] = useState({\n    calories: 0,\n    protein: 0,\n    carbs: 0,\n    fats: 0\n  });\n  function updateForm(value) {\n    return setSelected(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`http://localhost:5050/record/search?q=${encodeURIComponent(query)}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const record = await response.json();\n      if (!record) {\n        window.alert(`No Foods Found`);\n        navigate(\"/\");\n        return;\n      }\n      console.log(record);\n      foodSearchList = record;\n    }\n    fetchData();\n  }, [query]);\n  async function fetchNutrient(e) {\n    let nutritionvalue = [];\n    const response = await fetch(`http://localhost:5050/record/${e}`);\n    if (!response.ok) {\n      const message = `An error has occurred: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n    const nutrients = response.json();\n    for (let i of nutrients) {\n      if (i.nutrient.unitName === \"kcal\") {\n        nutritionvalue[0] = i.amount;\n      }\n      if (i.nutrient.name === \"Protein\") {\n        nutritionvalue[1] = i.amount;\n      }\n      if (i.nutrient.name === \"Carbohydrate, by difference\") {\n        nutritionvalue[2] = i.amount;\n      }\n      if (i.nutrient.name === \"Total lipid (fat)\") {\n        nutritionvalue[3] = i.amount;\n      }\n    }\n  }\n  function Dropdown(items) {\n    const itemsdropdown = items.isArray ? items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      id: item._id,\n      onClick: e => fetchNutrient(e.target.id),\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 65\n    }, this)) : [];\n    console.log(items);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: itemsdropdown\n    }, void 0, false);\n  }\n  function Title() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"400%\"\n      },\n      children: \"Diet Tracker v1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search For Foods\",\n        onChange: e => updateQuery(() => e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      items: foodSearchList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(InputFood, \"uHApL9ssic/bybywjBk06lTNCOo=\", false, function () {\n  return [useNavigate];\n});\n_c = InputFood;\nvar _c;\n$RefreshReg$(_c, \"InputFood\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","InputFood","_s","navigate","foodSearchList","updateList","arr","query","updateQuery","selected","setSelected","calories","protein","carbs","fats","updateForm","value","prev","fetchData","response","fetch","encodeURIComponent","ok","message","statusText","window","alert","record","json","console","log","fetchNutrient","e","nutritionvalue","nutrients","i","nutrient","unitName","amount","name","Dropdown","items","itemsdropdown","isArray","map","item","id","_id","onClick","target","children","description","fileName","_jsxFileName","lineNumber","columnNumber","Title","style","textAlign","fontSize","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/linj2/Documents/MERN/client/src/components/FoodSearchBar.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function InputFood() {\r\n    const navigate = useNavigate();\r\n    const [foodSearchList, updateList] = useState([]);\r\n    const arr = [\"a\", \"b\"];\r\n    const [query, updateQuery] = useState(\"\");\r\n    const [selected, setSelected] = useState({\r\n      calories: 0,\r\n      protein: 0,\r\n      carbs: 0,\r\n      fats: 0\r\n    });\r\n\r\n    function updateForm(value) {\r\n      return setSelected((prev) => {\r\n        return {...prev, ...value};\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n          async function fetchData() {\r\n            const response = await fetch(`http://localhost:5050/record/search?q=${encodeURIComponent(query)}`);\r\n        \r\n            if (!response.ok) {\r\n              const message = `An error has occurred: ${response.statusText}`;\r\n              window.alert(message);\r\n              return;\r\n            }\r\n        \r\n            const record = await response.json();\r\n            if (!record) {\r\n              window.alert(`No Foods Found`);\r\n              navigate(\"/\");\r\n              return;\r\n            }\r\n\r\n            console.log(record);\r\n            foodSearchList = record;\r\n          }\r\n        \r\n          fetchData();\r\n    }, [query]);\r\n\r\n    async function fetchNutrient(e) {\r\n      let nutritionvalue = [];\r\n      const response = await fetch(`http://localhost:5050/record/${e}`);\r\n      if (!response.ok) {\r\n        const message = `An error has occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n      const nutrients = response.json();\r\n      for (let i of nutrients) {\r\n        if (i.nutrient.unitName === \"kcal\") {\r\n          nutritionvalue[0] = i.amount;\r\n        }\r\n        if (i.nutrient.name === \"Protein\") {\r\n          nutritionvalue[1] = i.amount;\r\n        }\r\n        if (i.nutrient.name === \"Carbohydrate, by difference\") {\r\n          nutritionvalue[2] = i.amount;\r\n        }\r\n        if (i.nutrient.name === \"Total lipid (fat)\") {\r\n          nutritionvalue[3] = i.amount;\r\n        }\r\n      }\r\n    }\r\n\r\n    function Dropdown(items) {\r\n      \r\n      const itemsdropdown = (items.isArray) ? items.map(item => <p id={item._id} onClick={(e) => fetchNutrient(e.target.id)}>{item.description}</p>) : [];\r\n      console.log(items);\r\n      return(\r\n        <>\r\n          {itemsdropdown}\r\n        </>\r\n      )\r\n    }\r\n\r\n    function Title() {\r\n      return <h1 style={{ textAlign: \"center\", fontSize: \"400%\" }}>Diet Tracker v1</h1>;\r\n  }\r\n\r\n  \r\n\r\n    return(\r\n      <>\r\n        <Title />\r\n\r\n        <form>\r\n          <input type=\"text\" placeholder=\"Search For Foods\" onChange={(e) => updateQuery(() => e.target.value)}></input>\r\n        </form>\r\n        <Dropdown items={foodSearchList}></Dropdown>\r\n      </>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,cAAc,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAMW,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;EACtB,MAAM,CAACC,KAAK,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IACvCgB,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAE,CAAC;IACVC,KAAK,EAAE,CAAC;IACRC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,SAASC,UAAUA,CAACC,KAAK,EAAE;IACzB,OAAON,WAAW,CAAEO,IAAI,IAAK;MAC3B,OAAO;QAAC,GAAGA,IAAI;QAAE,GAAGD;MAAK,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEAtB,SAAS,CAAC,MAAM;IACV,eAAewB,SAASA,CAAA,EAAG;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCC,kBAAkB,CAACd,KAAK,CAAE,EAAC,CAAC;MAElG,IAAI,CAACY,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAI,0BAAyBJ,QAAQ,CAACK,UAAW,EAAC;QAC/DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACF;MAEA,MAAMI,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACpC,IAAI,CAACD,MAAM,EAAE;QACXF,MAAM,CAACC,KAAK,CAAE,gBAAe,CAAC;QAC9BvB,QAAQ,CAAC,GAAG,CAAC;QACb;MACF;MAEA0B,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnBvB,cAAc,GAAGuB,MAAM;IACzB;IAEAT,SAAS,CAAC,CAAC;EACjB,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;EAEX,eAAewB,aAAaA,CAACC,CAAC,EAAE;IAC9B,IAAIC,cAAc,GAAG,EAAE;IACvB,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BY,CAAE,EAAC,CAAC;IACjE,IAAI,CAACb,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,OAAO,GAAI,0BAAyBJ,QAAQ,CAACK,UAAW,EAAC;MAC/DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;MACrB;IACF;IACA,MAAMW,SAAS,GAAGf,QAAQ,CAACS,IAAI,CAAC,CAAC;IACjC,KAAK,IAAIO,CAAC,IAAID,SAAS,EAAE;MACvB,IAAIC,CAAC,CAACC,QAAQ,CAACC,QAAQ,KAAK,MAAM,EAAE;QAClCJ,cAAc,CAAC,CAAC,CAAC,GAAGE,CAAC,CAACG,MAAM;MAC9B;MACA,IAAIH,CAAC,CAACC,QAAQ,CAACG,IAAI,KAAK,SAAS,EAAE;QACjCN,cAAc,CAAC,CAAC,CAAC,GAAGE,CAAC,CAACG,MAAM;MAC9B;MACA,IAAIH,CAAC,CAACC,QAAQ,CAACG,IAAI,KAAK,6BAA6B,EAAE;QACrDN,cAAc,CAAC,CAAC,CAAC,GAAGE,CAAC,CAACG,MAAM;MAC9B;MACA,IAAIH,CAAC,CAACC,QAAQ,CAACG,IAAI,KAAK,mBAAmB,EAAE;QAC3CN,cAAc,CAAC,CAAC,CAAC,GAAGE,CAAC,CAACG,MAAM;MAC9B;IACF;EACF;EAEA,SAASE,QAAQA,CAACC,KAAK,EAAE;IAEvB,MAAMC,aAAa,GAAID,KAAK,CAACE,OAAO,GAAIF,KAAK,CAACG,GAAG,CAACC,IAAI,iBAAI/C,OAAA;MAAGgD,EAAE,EAAED,IAAI,CAACE,GAAI;MAACC,OAAO,EAAGhB,CAAC,IAAKD,aAAa,CAACC,CAAC,CAACiB,MAAM,CAACH,EAAE,CAAE;MAAAI,QAAA,EAAEL,IAAI,CAACM;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,CAAC,GAAG,EAAE;IACnJ1B,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;IAClB,oBACE3C,OAAA,CAAAE,SAAA;MAAAkD,QAAA,EACGR;IAAa,gBACd,CAAC;EAEP;EAEA,SAASc,KAAKA,CAAA,EAAG;IACf,oBAAO1D,OAAA;MAAI2D,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAT,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACrF;EAIE,oBACEzD,OAAA,CAAAE,SAAA;IAAAkD,QAAA,gBACEpD,OAAA,CAAC0D,KAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAETzD,OAAA;MAAAoD,QAAA,eACEpD,OAAA;QAAO8D,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,kBAAkB;QAACC,QAAQ,EAAG9B,CAAC,IAAKxB,WAAW,CAAC,MAAMwB,CAAC,CAACiB,MAAM,CAACjC,KAAK;MAAE;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1G,CAAC,eACPzD,OAAA,CAAC0C,QAAQ;MAACC,KAAK,EAAErC;IAAe;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA,eAC5C,CAAC;AAET;AAACrD,EAAA,CA9FuBD,SAAS;EAAA,QACZL,WAAW;AAAA;AAAAmE,EAAA,GADR9D,SAAS;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}