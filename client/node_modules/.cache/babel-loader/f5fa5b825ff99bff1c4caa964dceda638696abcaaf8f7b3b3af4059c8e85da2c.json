{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\linj2\\\\Documents\\\\MERN\\\\client\\\\src\\\\components\\\\FoodSearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InputFood() {\n  _s();\n  const navigate = useNavigate();\n  const multiplier = React.useState(1);\n  const [foodSearchList, updateList] = useState([]);\n  const [query, updateQuery] = useState(\"\");\n  const [selected, setSelected] = useState({\n    name: \"\",\n    calories: 0,\n    protein: 0,\n    carbs: 0,\n    fats: 0\n  });\n  function updateForm(value) {\n    return setSelected(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`http://localhost:5050/record/search?q=${encodeURIComponent(query)}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const record = await response.json();\n      if (!record) {\n        window.alert(`No Foods Found`);\n        navigate(\"/\");\n        return;\n      }\n      console.log(record);\n      updateList(() => record);\n    }\n    fetchData();\n  }, [query]);\n  async function fetchNutrient(e) {\n    let nutritionvalue = {\n      name: \"\",\n      calories: 0,\n      protein: 0,\n      carbs: 0,\n      fats: 0\n    };\n    const response = await fetch(`http://localhost:5050/record/${e}`);\n    if (!response.ok) {\n      const message = `An error has occurred: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n    const selecteditem = await response.json();\n    nutritionvalue.name = selecteditem.description;\n    for (let i of selecteditem.foodNutrients) {\n      if (i.nutrient.unitName === \"kcal\") {\n        nutritionvalue.calories = i.amount;\n      }\n      if (i.nutrient.name === \"Protein\") {\n        nutritionvalue.protein = i.amount;\n      }\n      if (i.nutrient.name === \"Carbohydrate, by difference\") {\n        nutritionvalue.carbs = i.amount;\n      }\n      if (i.nutrient.name === \"Total lipid (fat)\") {\n        nutritionvalue.fats = i.amount;\n      }\n    }\n    updateForm(nutritionvalue);\n  }\n  function Dropdown(_ref) {\n    let {\n      items\n    } = _ref;\n    const itemsdropdown = items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      id: item._id,\n      onClick: e => fetchNutrient(e.target.id),\n      children: [\"-\", item.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 47\n    }, this));\n    console.log(items);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: itemsdropdown\n    }, void 0, false);\n  }\n  function Title() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"400%\"\n      },\n      children: \"Diet Tracker v1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 14\n    }, this);\n  }\n  function EnterAmt() {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Quanitity (grams)\",\n      onChange: e => multiplier[1](e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this);\n  }\n  function DisplaySelected() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Item:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Name: \", selected.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Calories: \", selected.calories * multiplier[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Protein: \", selected.protein * multiplier[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Carbs: \", selected.carbs * multiplier[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Fats: \", selected.fats * multiplier[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: \"1\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search For Foods\",\n          onChange: e => updateQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          items: foodSearchList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingLeft: \"70%\",\n          position: \"absolute\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(EnterAmt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DisplaySelected, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(InputFood, \"vVpr0hFK58sE2r0syItvX8YIcog=\", false, function () {\n  return [useNavigate];\n});\n_c = InputFood;\nvar _c;\n$RefreshReg$(_c, \"InputFood\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","InputFood","_s","navigate","multiplier","foodSearchList","updateList","query","updateQuery","selected","setSelected","name","calories","protein","carbs","fats","updateForm","value","prev","fetchData","response","fetch","encodeURIComponent","ok","message","statusText","window","alert","record","json","console","log","fetchNutrient","e","nutritionvalue","selecteditem","description","i","foodNutrients","nutrient","unitName","amount","Dropdown","_ref","items","itemsdropdown","map","item","id","_id","onClick","target","children","fileName","_jsxFileName","lineNumber","columnNumber","Title","style","textAlign","fontSize","EnterAmt","type","placeholder","onChange","DisplaySelected","display","zIndex","paddingLeft","position","_c","$RefreshReg$"],"sources":["C:/Users/linj2/Documents/MERN/client/src/components/FoodSearchBar.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function InputFood() {\r\n    const navigate = useNavigate();\r\n    const multiplier = React.useState(1);\r\n    const [foodSearchList, updateList] = useState([]);\r\n    const [query, updateQuery] = useState(\"\");\r\n    const [selected, setSelected] = useState({\r\n      name: \"\",\r\n      calories: 0,\r\n      protein: 0,\r\n      carbs: 0,\r\n      fats: 0\r\n    });\r\n\r\n    function updateForm(value) {\r\n      return setSelected((prev) => {\r\n        return {...prev, ...value};\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n          async function fetchData() {\r\n            const response = await fetch(`http://localhost:5050/record/search?q=${encodeURIComponent(query)}`);\r\n        \r\n            if (!response.ok) {\r\n              const message = `An error has occurred: ${response.statusText}`;\r\n              window.alert(message);\r\n              return;\r\n            }\r\n        \r\n            const record = await response.json();\r\n            if (!record) {\r\n              window.alert(`No Foods Found`);\r\n              navigate(\"/\");\r\n              return;\r\n            }\r\n\r\n            console.log(record);\r\n            updateList(() => record);\r\n          }\r\n        \r\n          fetchData();\r\n    }, [query]);\r\n\r\n    async function fetchNutrient(e) {\r\n      let nutritionvalue = {\r\n        name: \"\",\r\n        calories: 0,\r\n        protein: 0,\r\n        carbs: 0,\r\n        fats: 0\r\n      };\r\n      const response = await fetch(`http://localhost:5050/record/${e}`);\r\n      if (!response.ok) {\r\n        const message = `An error has occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n      const selecteditem = await response.json();\r\n      nutritionvalue.name = selecteditem.description;\r\n      for (let i of selecteditem.foodNutrients) {\r\n        if (i.nutrient.unitName === \"kcal\") {\r\n          nutritionvalue.calories = i.amount;\r\n        }\r\n        if (i.nutrient.name === \"Protein\") {\r\n          nutritionvalue.protein = i.amount;\r\n        }\r\n        if (i.nutrient.name === \"Carbohydrate, by difference\") {\r\n          nutritionvalue.carbs = i.amount;\r\n        }\r\n        if (i.nutrient.name === \"Total lipid (fat)\") {\r\n          nutritionvalue.fats = i.amount;\r\n        }\r\n      }\r\n      updateForm(nutritionvalue);\r\n    }\r\n\r\n    function Dropdown({items}) {\r\n      const itemsdropdown = items.map(item => <p id={item._id} onClick={(e) => fetchNutrient(e.target.id)}>-{item.description}</p>);\r\n      console.log(items);\r\n      return(\r\n        <>\r\n          {itemsdropdown}\r\n        </>\r\n      )\r\n    }\r\n\r\n    function Title() {\r\n      return <h1 style={{ textAlign: \"center\", fontSize: \"400%\" }}>Diet Tracker v1</h1>;\r\n    }\r\n\r\n    function EnterAmt() {\r\n      return(\r\n          <input type=\"text\" placeholder=\"Enter Quanitity (grams)\" onChange={e => multiplier[1](e.target.value)}></input>\r\n      )\r\n    }\r\n\r\n    function DisplaySelected() {\r\n      return (\r\n          <div>\r\n          <h2>Selected Item:</h2>\r\n          <h3>Name: {selected.name}</h3>\r\n          <h3>Calories: {selected.calories  * multiplier[0]}</h3>\r\n          <h3>Protein: {selected.protein  * multiplier[0]}</h3>\r\n          <h3>Carbs: {selected.carbs  * multiplier[0]}</h3>\r\n          <h3>Fats: {selected.fats  * multiplier[0]}</h3>\r\n          </div>\r\n      )\r\n    }\r\n\r\n\r\n    return(\r\n      <>\r\n        <Title />\r\n\r\n        <div style={{display: \"flex\"}}>\r\n          <div style={{zIndex: \"1\"}}>\r\n            <input type=\"text\" placeholder=\"Search For Foods\" onChange={(e) => updateQuery(e.target.value)}></input>\r\n            <Dropdown items={foodSearchList}></Dropdown>\r\n          </div>\r\n          \r\n          <div style={{paddingLeft: \"70%\", position: \"absolute\"}}>\r\n              <EnterAmt></EnterAmt>\r\n              <DisplaySelected></DisplaySelected>\r\n          </div>\r\n          \r\n        </div>\r\n      </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}