{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\linj2\\\\Documents\\\\MERN\\\\client\\\\src\\\\components\\\\FoodSearchBar.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useData } from \"C:/Users/linj2/Documents/MERN/client/src/DataContext.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InputFood() {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const {\n    currentList,\n    setCurrentList\n  } = useData();\n  const [foodSearchList, updateList] = useState([]);\n  const [query, updateQuery] = useState(\"\");\n  const [selected, setSelected] = useState({\n    name: \"\",\n    calories: 0,\n    protein: 0,\n    carbs: 0,\n    fats: 0\n  });\n  const [multselected, setMultselected] = useState({});\n  function updateForm(value) {\n    return setSelected(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`http://localhost:5050/record/search?q=${encodeURIComponent(query)}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const record = await response.json();\n      if (!record) {\n        window.alert(`No Foods Found`);\n        return;\n      }\n      console.log(record);\n      updateList(() => record);\n    }\n    fetchData();\n  }, [query]);\n  async function fetchNutrient(e) {\n    let nutritionvalue = {\n      name: \"\",\n      calories: 0,\n      protein: 0,\n      carbs: 0,\n      fats: 0\n    };\n    const response = await fetch(`http://localhost:5050/record/${e}`);\n    if (!response.ok) {\n      const message = `An error has occurred: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n    const selecteditem = await response.json();\n    nutritionvalue.name = selecteditem.description;\n    for (let i of selecteditem.foodNutrients) {\n      if (i.nutrient.unitName === \"kcal\") {\n        nutritionvalue.calories = i.amount;\n      }\n      if (i.nutrient.name === \"Protein\") {\n        nutritionvalue.protein = i.amount;\n      }\n      if (i.nutrient.name === \"Carbohydrate, by difference\") {\n        nutritionvalue.carbs = i.amount;\n      }\n      if (i.nutrient.name === \"Total lipid (fat)\") {\n        nutritionvalue.fats = i.amount;\n      }\n    }\n    updateForm(nutritionvalue);\n  }\n  const Dropdown = /*#__PURE__*/React.memo(_ref => {\n    let {\n      items\n    } = _ref;\n    console.log(items);\n    const itemsdropdown = items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      id: item._id,\n      onClick: e => fetchNutrient(e.target.id),\n      children: [\"-\", item.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 47\n    }, this));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: itemsdropdown\n    }, void 0, false);\n  });\n  function Title() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"400%\"\n      },\n      children: \"Diet Tracker v1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 14\n    }, this);\n  }\n  function EnterAmt() {\n    _s();\n    const [multiplier, updateMultiplier] = useState(1);\n    setMultselected({\n      Name: selected.name,\n      Calories: Math.round(selected.calories * multiplier / 100 * 1000) / 1000,\n      Protein: Math.round(selected.protein * multiplier / 100 * 1000) / 1000,\n      Carbs: Math.round(selected.carbs * multiplier / 100 * 1000) / 1000,\n      Fats: Math.round(selected.fats * multiplier / 100 * 1000) / 1000\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Quanitity (grams)\",\n        onChange: e => updateMultiplier(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Selected Item:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Name: \", selected.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Calories: \", Math.round(selected.calories * multiplier / 100 * 1000) / 1000]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Protein: \", Math.round(selected.protein * multiplier / 100 * 1000) / 1000]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Carbs: \", Math.round(selected.carbs * multiplier / 100 * 1000) / 1000]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Fats: \", Math.round(selected.fats * multiplier / 100 * 1000) / 1000]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n  _s(EnterAmt, \"+zjKm146HV5bJhHUmUOydFfsku8=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: \"1\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search For Foods\",\n          onChange: e => updateQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          items: foodSearchList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingLeft: \"70%\",\n          position: \"absolute\"\n        },\n        children: /*#__PURE__*/_jsxDEV(EnterAmt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"80%\",\n          position: \"absolute\"\n        },\n        onClick: () => {\n          let temp = currentList;\n          temp.push(multselected);\n          setCurrentList(temp);\n          navigate(\"/\");\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s2(InputFood, \"j4chPt+V2eUKjAtXniz+jjuFChc=\", false, function () {\n  return [useNavigate, useData];\n});\n_c = InputFood;\nvar _c;\n$RefreshReg$(_c, \"InputFood\");","map":{"version":3,"names":["React","useEffect","useState","useData","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","InputFood","_s2","_s","$RefreshSig$","navigate","currentList","setCurrentList","foodSearchList","updateList","query","updateQuery","selected","setSelected","name","calories","protein","carbs","fats","multselected","setMultselected","updateForm","value","prev","fetchData","response","fetch","encodeURIComponent","ok","message","statusText","window","alert","record","json","console","log","fetchNutrient","e","nutritionvalue","selecteditem","description","i","foodNutrients","nutrient","unitName","amount","Dropdown","memo","_ref","items","itemsdropdown","map","item","id","_id","onClick","target","children","fileName","_jsxFileName","lineNumber","columnNumber","Title","style","textAlign","fontSize","EnterAmt","multiplier","updateMultiplier","Name","Calories","Math","round","Protein","Carbs","Fats","type","placeholder","onChange","display","zIndex","paddingLeft","position","marginLeft","temp","push","_c","$RefreshReg$"],"sources":["C:/Users/linj2/Documents/MERN/client/src/components/FoodSearchBar.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useData} from \"C:/Users/linj2/Documents/MERN/client/src/DataContext.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function InputFood() {\r\n    const navigate = useNavigate();\r\n    const {currentList, setCurrentList} = useData();\r\n    const [foodSearchList, updateList] = useState([]);\r\n    const [query, updateQuery] = useState(\"\");\r\n    const [selected, setSelected] = useState({\r\n      name: \"\",\r\n      calories: 0,\r\n      protein: 0,\r\n      carbs: 0,\r\n      fats: 0\r\n    });\r\n    const [multselected, setMultselected] = useState({});\r\n\r\n    function updateForm(value) {\r\n      return setSelected((prev) => {\r\n        return {...prev, ...value};\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n          async function fetchData() {\r\n            const response = await fetch(`http://localhost:5050/record/search?q=${encodeURIComponent(query)}`);\r\n        \r\n            if (!response.ok) {\r\n              const message = `An error has occurred: ${response.statusText}`;\r\n              window.alert(message);\r\n              return;\r\n            }\r\n        \r\n            const record = await response.json();\r\n            if (!record) {\r\n              window.alert(`No Foods Found`);\r\n              return;\r\n            }\r\n\r\n            console.log(record);\r\n            updateList(() => record);\r\n          }\r\n        \r\n          fetchData();\r\n    }, [query]);\r\n\r\n    async function fetchNutrient(e) {\r\n      let nutritionvalue = {\r\n        name: \"\",\r\n        calories: 0,\r\n        protein: 0,\r\n        carbs: 0,\r\n        fats: 0\r\n      };\r\n      const response = await fetch(`http://localhost:5050/record/${e}`);\r\n      if (!response.ok) {\r\n        const message = `An error has occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n      const selecteditem = await response.json();\r\n      nutritionvalue.name = selecteditem.description;\r\n      for (let i of selecteditem.foodNutrients) {\r\n        if (i.nutrient.unitName === \"kcal\") {\r\n          nutritionvalue.calories = i.amount;\r\n        }\r\n        if (i.nutrient.name === \"Protein\") {\r\n          nutritionvalue.protein = i.amount;\r\n        }\r\n        if (i.nutrient.name === \"Carbohydrate, by difference\") {\r\n          nutritionvalue.carbs = i.amount;\r\n        }\r\n        if (i.nutrient.name === \"Total lipid (fat)\") {\r\n          nutritionvalue.fats = i.amount;\r\n        }\r\n      }\r\n      updateForm(nutritionvalue);\r\n    }\r\n\r\n    const Dropdown = React.memo(({items}) => {\r\n      console.log(items);\r\n      const itemsdropdown = items.map(item => <p id={item._id} onClick={(e) => fetchNutrient(e.target.id)}>-{item.description}</p>);\r\n      return(\r\n        <>\r\n          {itemsdropdown}\r\n        </>\r\n      )\r\n    });\r\n\r\n    function Title() {\r\n      return <h1 style={{ textAlign: \"center\", fontSize: \"400%\" }}>Diet Tracker v1</h1>;\r\n    }\r\n\r\n\r\n    function EnterAmt() {\r\n      const [multiplier, updateMultiplier] = useState(1);\r\n      setMultselected({\r\n          Name: selected.name,\r\n          Calories: Math.round((selected.calories  * multiplier/100) * 1000) / 1000,\r\n          Protein: Math.round((selected.protein  * multiplier/100) * 1000) / 1000,\r\n          Carbs: Math.round((selected.carbs  * multiplier/100) * 1000) / 1000,\r\n          Fats: Math.round((selected.fats  * multiplier/100) * 1000) / 1000\r\n      });\r\n      return(\r\n        <>\r\n            <input type=\"text\" placeholder=\"Enter Quanitity (grams)\" onChange={e => updateMultiplier(e.target.value)}></input>\r\n          <div>\r\n          <h2>Selected Item:</h2>\r\n          <h3>Name: {selected.name}</h3>\r\n          <h3>Calories: {Math.round((selected.calories  * multiplier/100) * 1000) / 1000}</h3>\r\n          <h3>Protein: {Math.round((selected.protein  * multiplier/100) * 1000) / 1000}</h3>\r\n          <h3>Carbs: {Math.round((selected.carbs  * multiplier/100) * 1000) / 1000}</h3>\r\n          <h3>Fats: {Math.round((selected.fats  * multiplier/100) * 1000) / 1000}</h3>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n\r\n\r\n    return(\r\n      <>\r\n        <Title />\r\n\r\n        <div style={{display: \"flex\"}}>\r\n          <div style={{zIndex: \"1\"}}>\r\n            <input type=\"text\" placeholder=\"Search For Foods\" onChange={(e) => updateQuery(e.target.value)}></input>\r\n            <Dropdown items={foodSearchList}></Dropdown>\r\n          </div>\r\n          \r\n          <div style={{paddingLeft: \"70%\", position: \"absolute\"}}>\r\n              <EnterAmt></EnterAmt>\r\n          </div>\r\n\r\n          <button style={{marginLeft: \"80%\", position: \"absolute\"}} onClick={() => {\r\n              let temp = currentList;\r\n              temp.push(multselected);\r\n              setCurrentList(temp);\r\n              navigate(\"/\")\r\n          }}>Submit</button>\r\n          \r\n        </div>\r\n      </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}